.data
    message1: .asciiz "Input is empty"
    message2: .asciiz "Input is too long"
    message3: .asciiz "Invalid base-36 number"
    userinput: .space 20
    newline:   .asciiz "\n"
    space:     .asciiz " "
.text
    main:
        li $v0, 8 #getting user input as text
        la $a0, userinput
        li $a1, 20  #storing 20 bytes as space
        syscall
        li $t1, 0 #make $t1 0
        la $t0, userinput  #put userinput into $t0
    loop: #trying to find length of the string
         lb $a0, 0($t0) #loading data of the first index inside $a0 (0)
         li $v0, 1
         addi $a0, $a0 0
         syscall
         beqz $a0, done #branch statement if $a0 is empty go to done
         addi $t0, $t0, 1 
         addi $t1, $t1, 1
         j    loop
    done:
         subi $t1, $t1, 1 #to remove the null character
         #li $v0, 1  #to print the integer
         #add $a0, $0, $t1 
         #syscall
         beqz $t1, empty #branch statement to determine if it empty
         li $t2, 5
         slt $t0, $t1, $t2
         beqz $t0, Greater
         j    check
empty: 
        li $v0, 4
        la $a0, message1 #displays input is empty
        syscall
        j  end

Greater:
       li $v0, 4
       la $a0, message2 #displays input is too long
       syscall
       j end
check:  
   	la $t5, userinput
   	li $t3, 1
       loop2: 
           bgt $t0, $t1, solve #checks if t0 is greater than t1 then go to solve
           addi $t0, $t0, 1 #adds 1 to t0
           lb $s0, 0($t5) #loads the first element of t5(userinput) into s0
           addi $t5, $t5, 1 #increases index by 1
           addi $t2, $s0, -48 #subtracts 48 from s0 and stores in t2 (to start from 0)
           sltiu $t2, $t2, 10 #checks if it is less than 10
           bne $t2, $t3, check_uppercase #if it is greater than 10 it is invalid
           j loop2

           check_uppercase:
           	addi $t2, $s0, -65 #subtracts 48 from s0 and stores in t2 (to start from 0)
           	sltiu $t2, $t2, 16 #checks if it is less than 10
           	bne $t2, $t3, lower_case #if it is greater than 10 it is invalid
           j loop2
	
print_invalid:
       li $v0, 4
       la $a0, message3 #displays invalid base 36 number
       syscall 
end:
   	li $v0, 10
   	syscall